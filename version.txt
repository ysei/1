ToDo
	* First , refactoring all without adding any functions . 
	* Fix refresh timing of screen . 


0020031015 0.09
	* Refactored and refactored . 

0020031001
	* Added String.times1000 . 

0020030921 0.08
	* Refactored more . 
	* Deleted @@direntry . 

0020030920
	* I found one of the bad point . 

0020030704
	* Start to work User__mgr__file . 

0020021224
	* Changed many variables to @value . 
	* Created @@value and module . 
	* Created class User__mgr__window to pass message to 
	active window or active object . 

0020021209
	Inkey-thread etc. are changed to the Object . 

0020020827
	Created User__drawing.file to chdir . 

0020020826 0.07
	Now re-architecting . 
	read__direntory() was into User__drawing . 
	User__drawing is renamed to User__dirlist . 

0020020211
	OO programming is started . 

0020020201
	Fixed fatal bug of str__size__unit indication at handreds MB file . Ex. ``200.2M '' to `` 200M '' . 

0020011221 0.06
	Supported file size indication of xx.xM . 
	Refreshing every pseudo-int , usually . 
	Cursor of base window chases pointed file . 
	etc . 

0020011206 0.05
	Earlier release from help to my father who got cancer . 

0020011130 0.04
	This vertical blank interrupt emulation code is suspended from less time of multi threading . 

#$thread__timer__1 = Thread.start do
#	loop do
#		t = Time.now
#		$num_a__fifo__timer.push Time.at( t ).to_i * 1000000 + Time.at( t.usec ).to_i
#		sleep 0.000033
#	end
#end
#$thread__timer = Thread.start do
#	time__now = Time.now
#	$Num__time__start__program = Time.at( time__now ).to_i * 1000000 + Time.at( time__now.usec ).to_i
#	$num__time__mark__refresh = $Num__time__start__program.clone
#	$flag__time_to_refresh = true
#	loop do
#		loop do
#			retry if $flag__time_to_refresh
#
#			begin
#				time__now = Time.now
#				num__time = Time.at( time__now ).to_i * 1000000 + Time.at( time__now.usec ).to_i
#			end until num__time - $num__time__mark__refresh >= 8333  # 1/120 sec
#
#			$flag__time_to_refresh = true
#			$num__time__mark__refresh = num__time.clone
#		end
#	end
#end


0020011127 0.03 

# 0.00 
